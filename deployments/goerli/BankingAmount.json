{
  "address": "0xdFdAaB9D712a76c1EfD6662813576D26Dc211003",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "PriceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "USER_ADDRESS",
          "type": "address"
        }
      ],
      "name": "ViewAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "people",
      "outputs": [
        {
          "internalType": "address",
          "name": "CustmerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to_receiever",
          "type": "address"
        }
      ],
      "name": "send_to",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x16e256a13c58002e82042d5eaef4d2622416d1078c69aadbfc119a18269e0297",
  "receipt": {
    "to": null,
    "from": "0x0a0179860323B23d990E71f7ee006238D8720179",
    "contractAddress": "0xdFdAaB9D712a76c1EfD6662813576D26Dc211003",
    "transactionIndex": 69,
    "gasUsed": "960860",
    "logsBloom": "0x
    "blockHash": "0x0378841272306720009c21196b60da24bfe9a1783a0f2c9932d72222b9db0c95",
    "transactionHash": "0x16e256a13c58002e82042d5eaef4d2622416d1078c69aadbfc119a18269e0297",
    "logs": [],
    "blockNumber": 8291856,
    "cumulativeGasUsed": "16961570",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "66bb885b3d5ab38ab0aadc5abe30a590",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"PriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"USER_ADDRESS\",\"type\":\"address\"}],\"name\":\"ViewAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"people\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"CustmerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to_receiever\",\"type\":\"address\"}],\"name\":\"send_to\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BankingTranscation.sol\":\"BankingAmount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/BankingTranscation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT LICENSED\\npragma solidity ^0.8.8;\\n\\n/* This contract is about sending your ETH to the BANK(contract) and retieve when you need or \\n   you can send to someone\\n   function:\\n   payment\\n   withdraw\\n   send_to\\n   View_deposited amount\\n*/\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract BankingAmount{\\n    using PriceConverter for uint256;\\n    address public contractOwner;\\n    struct Custmers{\\n        address CustmerAddress;\\n        uint256 amount;\\n    }\\n    AggregatorV3Interface public PriceFeed;\\n    constructor(address PriceFeedAddress){\\n       contractOwner= msg.sender;\\n       PriceFeed=AggregatorV3Interface(PriceFeedAddress);\\n    }\\n    Custmers[] public people;\\n    mapping(address => uint256) public Balance;\\n\\n    function payment() public payable{\\n        people.push(Custmers(msg.sender,msg.value.getConversionRate(PriceFeed)));\\n        Balance[msg.sender]= Balance[msg.sender]+ msg.value.getConversionRate(PriceFeed);\\n    }\\n    function ViewAmount(address USER_ADDRESS) public view returns(uint256){\\n        return Balance[USER_ADDRESS];\\n    }\\n    function send_to(address payable to_receiever) public payable{\\n        address from_user=msg.sender;\\n        (bool sent,) = to_receiever.call{value: Balance[from_user]}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n        Balance[to_receiever]=Balance[to_receiever]+Balance[from_user];\\n        Balance[from_user]=0;\\n    }\\n    function withDraw() public payable{\\n        address withdraw=msg.sender;\\n        (bool sent,)=withdraw.call{value:Balance[withdraw]}(\\\"\\\");\\n        require(sent, \\\"Failed to withdraw Ether\\\");\\n        Balance[withdraw]=0;\\n    }\\n    \\n}\",\"keccak256\":\"0x003e3fff842789016f35d576003c30a84793e44723b8180d22b70a6decb16908\",\"license\":\"MIT LICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  // call it get fiatConversionRate, since it assumes something about decimals\\n  // It wouldn't work for every aggregator\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x677e22129c2af493682387ba62cf9e3ba20b643c96a1b312a4a3e5b82f5a52cf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010fd380380620010fd833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610f92806200016b6000396000f3fe60806040526004361061007b5760003560e01c806342f6487a1161004e57806342f6487a1461012f5780639e7a13ad14610139578063ce606ee014610177578063e264d183146101a25761007b565b806308b7fa31146100805780630fdb1c10146100ab578063239fcf0f146100b55780632d0bd3b8146100f2575b600080fd5b34801561008c57600080fd5b506100956101be565b6040516100a291906108f9565b60405180910390f35b6100b36101e4565b005b3480156100c157600080fd5b506100dc60048036038101906100d79190610957565b61031d565b6040516100e9919061099d565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610957565b610335565b604051610126919061099d565b60405180910390f35b61013761037e565b005b34801561014557600080fd5b50610160600480360381019061015b91906109e4565b61051f565b60405161016e929190610a20565b60405180910390f35b34801561018357600080fd5b5061018c610573565b6040516101999190610a49565b60405180910390f35b6101bc60048036038101906101b79190610aa2565b610597565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008173ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161024e90610b00565b60006040518083038185875af1925050503d806000811461028b576040519150601f19603f3d011682016040523d82523d6000602084013e610290565b606091505b50509050806102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90610b72565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60036020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016103dc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079e90919063ffffffff16565b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050610490600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079e90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104da9190610bc1565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6002818154811061052f57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008273ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161060190610b00565b60006040518083038185875af1925050503d806000811461063e576040519150601f19603f3d011682016040523d82523d6000602084013e610643565b606091505b5050905080610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610c63565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107119190610bc1565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000806107aa836107da565b90506000670de0b6b3a764000085836107c39190610c83565b6107cd9190610d0c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561082357600080fd5b505afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b9190610dca565b5050509150506402540be400816108729190610e45565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108bf6108ba6108b58461087a565b61089a565b61087a565b9050919050565b60006108d1826108a4565b9050919050565b60006108e3826108c6565b9050919050565b6108f3816108d8565b82525050565b600060208201905061090e60008301846108ea565b92915050565b600080fd5b60006109248261087a565b9050919050565b61093481610919565b811461093f57600080fd5b50565b6000813590506109518161092b565b92915050565b60006020828403121561096d5761096c610914565b5b600061097b84828501610942565b91505092915050565b6000819050919050565b61099781610984565b82525050565b60006020820190506109b2600083018461098e565b92915050565b6109c181610984565b81146109cc57600080fd5b50565b6000813590506109de816109b8565b92915050565b6000602082840312156109fa576109f9610914565b5b6000610a08848285016109cf565b91505092915050565b610a1a81610919565b82525050565b6000604082019050610a356000830185610a11565b610a42602083018461098e565b9392505050565b6000602082019050610a5e6000830184610a11565b92915050565b6000610a6f8261087a565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610914565b5b6000610ac684828501610a8d565b91505092915050565b600081905092915050565b50565b6000610aea600083610acf565b9150610af582610ada565b600082019050919050565b6000610b0b82610add565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b6000610b5c601883610b15565b9150610b6782610b26565b602082019050919050565b60006020820190508181036000830152610b8b81610b4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bcc82610984565b9150610bd783610984565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c0c57610c0b610b92565b5b828201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610c4d601483610b15565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b6000610c8e82610984565b9150610c9983610984565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd257610cd1610b92565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1782610984565b9150610d2283610984565b925082610d3257610d31610cdd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5c81610d3d565b8114610d6757600080fd5b50565b600081519050610d7981610d53565b92915050565b6000819050919050565b610d9281610d7f565b8114610d9d57600080fd5b50565b600081519050610daf81610d89565b92915050565b600081519050610dc4816109b8565b92915050565b600080600080600060a08688031215610de657610de5610914565b5b6000610df488828901610d6a565b9550506020610e0588828901610da0565b9450506040610e1688828901610db5565b9350506060610e2788828901610db5565b9250506080610e3888828901610d6a565b9150509295509295909350565b6000610e5082610d7f565b9150610e5b83610d7f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9a57610e99610b92565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed757610ed6610b92565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1457610f13610b92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5157610f50610b92565b5b82820290509291505056fea26469706673582212205c527518461fc82b38b12374dc7f893c88d0c63ad7e019db35798ddf905ef94364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806342f6487a1161004e57806342f6487a1461012f5780639e7a13ad14610139578063ce606ee014610177578063e264d183146101a25761007b565b806308b7fa31146100805780630fdb1c10146100ab578063239fcf0f146100b55780632d0bd3b8146100f2575b600080fd5b34801561008c57600080fd5b506100956101be565b6040516100a291906108f9565b60405180910390f35b6100b36101e4565b005b3480156100c157600080fd5b506100dc60048036038101906100d79190610957565b61031d565b6040516100e9919061099d565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610957565b610335565b604051610126919061099d565b60405180910390f35b61013761037e565b005b34801561014557600080fd5b50610160600480360381019061015b91906109e4565b61051f565b60405161016e929190610a20565b60405180910390f35b34801561018357600080fd5b5061018c610573565b6040516101999190610a49565b60405180910390f35b6101bc60048036038101906101b79190610aa2565b610597565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008173ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161024e90610b00565b60006040518083038185875af1925050503d806000811461028b576040519150601f19603f3d011682016040523d82523d6000602084013e610290565b606091505b50509050806102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90610b72565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60036020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016103dc600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079e90919063ffffffff16565b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050610490600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079e90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104da9190610bc1565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6002818154811061052f57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008273ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161060190610b00565b60006040518083038185875af1925050503d806000811461063e576040519150601f19603f3d011682016040523d82523d6000602084013e610643565b606091505b5050905080610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610c63565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107119190610bc1565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000806107aa836107da565b90506000670de0b6b3a764000085836107c39190610c83565b6107cd9190610d0c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561082357600080fd5b505afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b9190610dca565b5050509150506402540be400816108729190610e45565b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108bf6108ba6108b58461087a565b61089a565b61087a565b9050919050565b60006108d1826108a4565b9050919050565b60006108e3826108c6565b9050919050565b6108f3816108d8565b82525050565b600060208201905061090e60008301846108ea565b92915050565b600080fd5b60006109248261087a565b9050919050565b61093481610919565b811461093f57600080fd5b50565b6000813590506109518161092b565b92915050565b60006020828403121561096d5761096c610914565b5b600061097b84828501610942565b91505092915050565b6000819050919050565b61099781610984565b82525050565b60006020820190506109b2600083018461098e565b92915050565b6109c181610984565b81146109cc57600080fd5b50565b6000813590506109de816109b8565b92915050565b6000602082840312156109fa576109f9610914565b5b6000610a08848285016109cf565b91505092915050565b610a1a81610919565b82525050565b6000604082019050610a356000830185610a11565b610a42602083018461098e565b9392505050565b6000602082019050610a5e6000830184610a11565b92915050565b6000610a6f8261087a565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610914565b5b6000610ac684828501610a8d565b91505092915050565b600081905092915050565b50565b6000610aea600083610acf565b9150610af582610ada565b600082019050919050565b6000610b0b82610add565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b6000610b5c601883610b15565b9150610b6782610b26565b602082019050919050565b60006020820190508181036000830152610b8b81610b4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bcc82610984565b9150610bd783610984565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c0c57610c0b610b92565b5b828201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610c4d601483610b15565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b6000610c8e82610984565b9150610c9983610984565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd257610cd1610b92565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1782610984565b9150610d2283610984565b925082610d3257610d31610cdd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5c81610d3d565b8114610d6757600080fd5b50565b600081519050610d7981610d53565b92915050565b6000819050919050565b610d9281610d7f565b8114610d9d57600080fd5b50565b600081519050610daf81610d89565b92915050565b600081519050610dc4816109b8565b92915050565b600080600080600060a08688031215610de657610de5610914565b5b6000610df488828901610d6a565b9550506020610e0588828901610da0565b9450506040610e1688828901610db5565b9350506060610e2788828901610db5565b9250506080610e3888828901610d6a565b9150509295509295909350565b6000610e5082610d7f565b9150610e5b83610d7f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9a57610e99610b92565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed757610ed6610b92565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1457610f13610b92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f5157610f50610b92565b5b82820290509291505056fea26469706673582212205c527518461fc82b38b12374dc7f893c88d0c63ad7e019db35798ddf905ef94364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "contractOwner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 62,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "PriceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 83,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "people",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Custmers)59_storage)dyn_storage"
      },
      {
        "astId": 87,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "Balance",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Custmers)59_storage)dyn_storage": {
        "base": "t_struct(Custmers)59_storage",
        "encoding": "dynamic_array",
        "label": "struct BankingAmount.Custmers[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Custmers)59_storage": {
        "encoding": "inplace",
        "label": "struct BankingAmount.Custmers",
        "members": [
          {
            "astId": 56,
            "contract": "contracts/BankingTranscation.sol:BankingAmount",
            "label": "CustmerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 58,
            "contract": "contracts/BankingTranscation.sol:BankingAmount",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}