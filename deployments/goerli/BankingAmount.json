{
  "address": "0x78F2bB860FbC2eB65FB713f474e2D2E1D83e57eB",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "USER_ADDRESS",
          "type": "address"
        }
      ],
      "name": "ViewAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "people",
      "outputs": [
        {
          "internalType": "address",
          "name": "CustmerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to_receiever",
          "type": "address"
        }
      ],
      "name": "send_to",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdc3976c16fe93cb603aa122c24613f6f65b588fa87665a6004b8652a8050e9bc",
  "receipt": {
    "to": null,
    "from": "0x0a0179860323B23d990E71f7ee006238D8720179",
    "contractAddress": "0x78F2bB860FbC2eB65FB713f474e2D2E1D83e57eB",
    "transactionIndex": 35,
    "gasUsed": "661809",
    "logsBloom": "0x
    "blockHash": "0x8284dd5b989b09250f25d1824f87c0419fd18626f1d4878c094c6e724236a728",
    "transactionHash": "0xdc3976c16fe93cb603aa122c24613f6f65b588fa87665a6004b8652a8050e9bc",
    "logs": [],
    "blockNumber": 8288135,
    "cumulativeGasUsed": "4584931",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "58fe3d6bf582a4e34bbd190dec0c8a4a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"USER_ADDRESS\",\"type\":\"address\"}],\"name\":\"ViewAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"people\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"CustmerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to_receiever\",\"type\":\"address\"}],\"name\":\"send_to\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BankingTranscation.sol\":\"BankingAmount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BankingTranscation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT LICENSED\\npragma solidity ^0.8.8;\\n\\n/* This contract is about sending your ETH to the BANK(contract) and retieve when you need or \\n   you can send to someone\\n   function:\\n   payment\\n   withdraw\\n   send_to\\n   View_deposited amount\\n*/\\ncontract BankingAmount{\\n    address public contractOwner;\\n    struct Custmers{\\n        address CustmerAddress;\\n        uint256 amount;\\n    }\\n    constructor(){\\n       contractOwner= msg.sender;\\n    }\\n    Custmers[] public people;\\n    mapping(address => uint256) public Balance;\\n\\n    function payment() public payable{\\n        people.push(Custmers(msg.sender,msg.value));\\n        Balance[msg.sender]= Balance[msg.sender]+ msg.value;\\n    }\\n    function ViewAmount(address USER_ADDRESS) public view returns(uint256){\\n        return Balance[USER_ADDRESS];\\n    }\\n    function send_to(address payable to_receiever) public payable{\\n        address from_user=msg.sender;\\n        (bool sent,) = to_receiever.call{value: Balance[from_user]}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n        Balance[to_receiever]=Balance[to_receiever]+Balance[from_user];\\n        Balance[from_user]=0;\\n    }\\n    function withDraw() public payable{\\n        address withdraw=msg.sender;\\n        (bool sent,)=withdraw.call{value:Balance[withdraw]}(\\\"\\\");\\n        require(sent, \\\"Failed to withdraw Ether\\\");\\n        Balance[withdraw]=0;\\n    }\\n    \\n}\",\"keccak256\":\"0x7befe5ad426bc95e570ae312138fb2c57fa4aa0ab039fa21ad6740b88afee898\",\"license\":\"MIT LICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a9f806100606000396000f3fe6080604052600436106100705760003560e01c806342f6487a1161004e57806342f6487a146100f95780639e7a13ad14610103578063ce606ee014610141578063e264d1831461016c57610070565b80630fdb1c1014610075578063239fcf0f1461007f5780632d0bd3b8146100bc575b600080fd5b61007d610188565b005b34801561008b57600080fd5b506100a660048036038101906100a1919061073d565b6102c1565b6040516100b39190610783565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de919061073d565b6102d9565b6040516100f09190610783565b60405180910390f35b610101610322565b005b34801561010f57600080fd5b5061012a600480360381019061012591906107ca565b61045b565b604051610138929190610806565b60405180910390f35b34801561014d57600080fd5b506101566104af565b604051610163919061082f565b60405180910390f35b61018660048036038101906101819190610888565b6104d3565b005b600033905060008173ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516101f2906108e6565b60006040518083038185875af1925050503d806000811461022f576040519150601f19603f3d011682016040523d82523d6000602084013e610234565b606091505b5050905080610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610958565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60026020528060005260406000206000915090505481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041691906109a7565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061046b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008273ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161053d906108e6565b60006040518083038185875af1925050503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b50509050806105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90610a49565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461064d91906109a7565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070a826106df565b9050919050565b61071a816106ff565b811461072557600080fd5b50565b60008135905061073781610711565b92915050565b600060208284031215610753576107526106da565b5b600061076184828501610728565b91505092915050565b6000819050919050565b61077d8161076a565b82525050565b60006020820190506107986000830184610774565b92915050565b6107a78161076a565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df6106da565b5b60006107ee848285016107b5565b91505092915050565b610800816106ff565b82525050565b600060408201905061081b60008301856107f7565b6108286020830184610774565b9392505050565b600060208201905061084460008301846107f7565b92915050565b6000610855826106df565b9050919050565b6108658161084a565b811461087057600080fd5b50565b6000813590506108828161085c565b92915050565b60006020828403121561089e5761089d6106da565b5b60006108ac84828501610873565b91505092915050565b600081905092915050565b50565b60006108d06000836108b5565b91506108db826108c0565b600082019050919050565b60006108f1826108c3565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b60006109426018836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b28261076a565b91506109bd8361076a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f2576109f1610978565b5b828201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610a336014836108fb565b9150610a3e826109fd565b602082019050919050565b60006020820190508181036000830152610a6281610a26565b905091905056fea2646970667358221220c997dca16691067cfca1f2a757a57536867e71d5293bb061798230545764a74f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806342f6487a1161004e57806342f6487a146100f95780639e7a13ad14610103578063ce606ee014610141578063e264d1831461016c57610070565b80630fdb1c1014610075578063239fcf0f1461007f5780632d0bd3b8146100bc575b600080fd5b61007d610188565b005b34801561008b57600080fd5b506100a660048036038101906100a1919061073d565b6102c1565b6040516100b39190610783565b60405180910390f35b3480156100c857600080fd5b506100e360048036038101906100de919061073d565b6102d9565b6040516100f09190610783565b60405180910390f35b610101610322565b005b34801561010f57600080fd5b5061012a600480360381019061012591906107ca565b61045b565b604051610138929190610806565b60405180910390f35b34801561014d57600080fd5b506101566104af565b604051610163919061082f565b60405180910390f35b61018660048036038101906101819190610888565b6104d3565b005b600033905060008173ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516101f2906108e6565b60006040518083038185875af1925050503d806000811461022f576040519150601f19603f3d011682016040523d82523d6000602084013e610234565b606091505b5050905080610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610958565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60026020528060005260406000206000915090505481565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041691906109a7565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061046b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905060008273ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161053d906108e6565b60006040518083038185875af1925050503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b50509050806105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90610a49565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461064d91906109a7565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061070a826106df565b9050919050565b61071a816106ff565b811461072557600080fd5b50565b60008135905061073781610711565b92915050565b600060208284031215610753576107526106da565b5b600061076184828501610728565b91505092915050565b6000819050919050565b61077d8161076a565b82525050565b60006020820190506107986000830184610774565b92915050565b6107a78161076a565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df6106da565b5b60006107ee848285016107b5565b91505092915050565b610800816106ff565b82525050565b600060408201905061081b60008301856107f7565b6108286020830184610774565b9392505050565b600060208201905061084460008301846107f7565b92915050565b6000610855826106df565b9050919050565b6108658161084a565b811461087057600080fd5b50565b6000813590506108828161085c565b92915050565b60006020828403121561089e5761089d6106da565b5b60006108ac84828501610873565b91505092915050565b600081905092915050565b50565b60006108d06000836108b5565b91506108db826108c0565b600082019050919050565b60006108f1826108c3565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f2077697468647261772045746865720000000000000000600082015250565b60006109426018836108fb565b915061094d8261090c565b602082019050919050565b6000602082019050818103600083015261097181610935565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b28261076a565b91506109bd8361076a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109f2576109f1610978565b5b828201905092915050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610a336014836108fb565b9150610a3e826109fd565b602082019050919050565b60006020820190508181036000830152610a6281610a26565b905091905056fea2646970667358221220c997dca16691067cfca1f2a757a57536867e71d5293bb061798230545764a74f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "contractOwner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 21,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "people",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Custmers)8_storage)dyn_storage"
      },
      {
        "astId": 25,
        "contract": "contracts/BankingTranscation.sol:BankingAmount",
        "label": "Balance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Custmers)8_storage)dyn_storage": {
        "base": "t_struct(Custmers)8_storage",
        "encoding": "dynamic_array",
        "label": "struct BankingAmount.Custmers[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Custmers)8_storage": {
        "encoding": "inplace",
        "label": "struct BankingAmount.Custmers",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/BankingTranscation.sol:BankingAmount",
            "label": "CustmerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7,
            "contract": "contracts/BankingTranscation.sol:BankingAmount",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}